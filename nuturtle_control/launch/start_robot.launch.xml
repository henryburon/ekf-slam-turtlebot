<launch>

    <!-- args -->
    <arg name="cmd_src" default="none">
        <choice value="circle" />
        <choice value="teleop" />
        <choice value="none" />
    </arg>

    <arg name="robot" default="nusim">
        <choice value="nusim" />
        <choice value="localhost" />
        <choice value="none" />
    </arg>

    <arg name="use_rviz" default="true">
        <choice value="true" />
        <choice value="false" />
    </arg>

    <arg name="config_file" default="diff_params.yaml"/>

    <arg name="basic_world_config_file" default="basic_world.yaml"/>

    <arg name="rviz_file" default="$(find-pkg-share nusim)/config/nusim.rviz"/>
    <arg name="load_two_rviz" default="$(find-pkg-share nuturtle_control)/config/load_two.rviz"/>

    <arg name="odom_id" default="odom"/>
    <arg name="body_id" default="blue/base_footprint"/>
    <arg name="wheel_left" default="wheel_left_joint"/>
    <arg name="wheel_right" default="wheel_right_joint"/>


    <!-- Publish static transform -->
    <node pkg="tf2_ros" exec="static_transform_publisher" args="0 0 0 0 0 0 1 nusim/world odom"/>


    <!-- cmd_src -->

    <!-- ########## Begin_Citation [9] ########## -->

    <group if="$(eval '\'$(var cmd_src)\' == \'teleop\'')">
        <node pkg="teleop_twist_keyboard" exec="teleop_twist_keyboard" launch-prefix="xterm -e "/>
    </group>

    <!-- ########## End_Citation [9] ########## -->

    <group if="$(eval '\'$(var cmd_src)\' == \'circle\'')">
        <node pkg="nuturtle_control" exec="circle"/>
    </group>

    <group if="$(eval '\'$(var cmd_src)\' == \'none\'')">
    </group>


    <!-- rviz -->
    <group if="$(eval '\'$(var use_rviz)\' == \'true\' and \'$(var robot)\' != \'localhost\'')">

            <node pkg="rviz2" exec="rviz2" name="rviz2" args="-d $(var load_two_rviz)"/>

            <include file="$(find-pkg-share nuturtle_description)/launch/load_one.launch.py">
                <arg name="color" value="blue"/>
                <arg name="use_rviz" value="false"/>
                <arg name="use_jsp" value="false"/>
            </include>

            <node pkg="hls_lfcd_lds_driver" exec="hlds_laser_publisher">
                <param name="port" value="/dev/ttyUSB0"/>
            </node>

    </group>


    <!-- robot -->

    <!-- nusim -->
    <group if="$(eval '\'$(var robot)\' == \'nusim\'')">

        <!-- nusim node -->
        <node pkg="nusim" exec="nusim" name="nusim">
            <param from="$(find-pkg-share nusim)/config/$(var basic_world_config_file)"/>
            <param from="$(find-pkg-share nuturtle_description)/config/$(var config_file)"/>
            <param name="max_range" value="1.5"/>

        </node>
        
        <!-- load/publish the red robot -->
        <include file="$(find-pkg-share nuturtle_description)/launch/load_one.launch.py">
            <arg name="color" value="red"/>
            <arg name="use_rviz" value="false"/>
            <arg name="use_jsp" value="true"/>
        </include>

        <!-- ########## Begin_Citation [11] ########## -->

        <!-- odometry node -->
        <node pkg="nuturtle_control" exec="odometry">
            <param from="$(find-pkg-share nuturtle_description)/config/diff_params.yaml"/>
            <param name="body_id" value="$(var body_id)"/>
            <param name="odom_id" value="$(var odom_id)"/>
            <param name="wheel_left" value="blue/wheel_left_joint"/>
            <param name="wheel_right" value="blue/wheel_right_joint"/>
            <remap from="/joint_states" to="blue/joint_states"/>
        </node>

        <!-- turtle_control node -->
        <node pkg="nuturtle_control" exec="turtle_control">
            <param from="$(find-pkg-share nuturtle_description)/config/$(var config_file)"/>
            <remap from="/joint_states" to="blue/joint_states"/>
            <remap from="/wheel_cmd" to="red/wheel_cmd"/>
            <remap from="/sensor_data" to="red/sensor_data"/>
        </node>

        <!-- ########## End_Citation [11] ########## -->

    </group>


    <!-- localhost -->
    <group if="$(eval '\'$(var robot)\' == \'localhost\'')">
        <!-- Runs the nodes directly on the turtlebot3 -->
        <!-- odometry and turtle_control nodes should run on the turtlebot, as well as the numsr_turtlebot node -->
        <!-- odometry node -->
        <node pkg="nuturtle_control" exec="odometry">
            <param from="$(find-pkg-share nuturtle_description)/config/diff_params.yaml"/>
            <param name="body_id" value="$(var body_id)"/>
            <param name="odom_id" value="$(var odom_id)"/>
            <param name="wheel_left" value="blue/wheel_left_joint"/>
            <param name="wheel_right" value="blue/wheel_right_joint"/>
            <remap from="joint_states" to="blue/joint_states"/>
        </node>

        <node pkg="nuturtle_control" exec="turtle_control">
            <param from="$(find-pkg-share nuturtle_description)/config/$(var config_file)"/>
            <remap from="joint_states" to="red/joint_states"/>
            <remap from="wheel_cmd" to="red/wheel_cmd"/>
        </node>





    </group>


    <!-- none. Might need to do something with && != none (i.e. and not none) -->
    <!-- may also need to give this group additional abilities -->
    <!-- either fix the frame prefix issue, or will have to modify whichever rviz file goes with this -->
    <group if="$(eval '\'$(var robot)\' == \'none\'')">
        <include file="$(find-pkg-share nuturtle_description)/launch/load_one.launch.py">
                <arg name="color" value="blue"/>
                <!-- might have to make use_rviz true for it to show  -->
                <arg name="use_rviz" value="false"/> 
            </include>
    </group>


</launch>